# $POSTGRES_USER sets the name of the default superuser on Postgres in Docker
# https://github.com/docker-library/docs/blob/master/postgres/README.md#postgres_user
POSTGRES_DB=pf_local
POSTGRES_USER=rds_superuser
POSTGRES_PASSWORD=rds_superuser_pw

PG_URL="db:5432"
DEPLOY_ENV=local

# Set this to true to run the db initalization scripts, then set it to false for all the following migrations.
INIT_DATABASE=true

# To simulate the AWS production environment we use the same default superuser as production
DATABASE_SUPERUSER=rds_superuser

# This is the default superuser created with the AWS Database.
# This user should not be used by any applications.
# It's only for creating the owner role, database and installing extensions
DATABASE_ROOT_USER=pf_root
DATABASE_ROOT_USER_PASSWORD=pf_root_pw

# This is the database created by default in AWS
# We will create a new database for our appliction
INIT_DATABASE_NAME=pf_local

# The name of the new database we're creating for the application
DATABASE_NAME=probable_futures

# This is the db owner role used only by graphile-migrate
DATABASE_OWNER=pf_owner
DATABASE_OWNER_PASSWORD=pf_owner_pw

# This is the db role that postgraphile uses for connects
GRAPHILE_ROLE=pf_graphile
GRAPHILE_ROLE_PASSWORD=pf_graphile_pw

# This is functionally identical to the graphile role, but only used by the worker
# Using a separate role for the worker for connection statistics
WORKER_ROLE=pf_worker
WORKER_ROLE_PASSWORD=pf_worker_pw

# This is the db role that connects for un_authenticated queries
VISITOR_ROLE=pf_anonymous

# This is the db role that connects for authenticated users
AUTHENTICATED_ROLE=pf_authenticated
